{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Doggroomer Bienvenido a la documentaci\u00f3n de Doggroomer, la aplicaci\u00f3n de gesti\u00f3n de turnos y clientes para peluquer\u00edas caninas. Caracter\u00edsticas Gesti\u00f3n de clientes y mascotas Creaci\u00f3n y administraci\u00f3n de turnos \ud83d\udee0\ufe0f Tecnolog\u00edas Utilizadas Python 3.8+ Django 3.2+ SQLite: Base de datos utilizada en desarrollo.","title":"Home"},{"location":"#doggroomer","text":"Bienvenido a la documentaci\u00f3n de Doggroomer, la aplicaci\u00f3n de gesti\u00f3n de turnos y clientes para peluquer\u00edas caninas.","title":"Doggroomer"},{"location":"#caracteristicas","text":"Gesti\u00f3n de clientes y mascotas Creaci\u00f3n y administraci\u00f3n de turnos","title":"Caracter\u00edsticas"},{"location":"#tecnologias-utilizadas","text":"Python 3.8+ Django 3.2+ SQLite: Base de datos utilizada en desarrollo.","title":"\ud83d\udee0\ufe0f Tecnolog\u00edas Utilizadas"},{"location":"estructura/","text":"Estructura del Proyecto Doggroomer Este proyecto de Django gestiona turnos, clientes y usuarios para una peluquer\u00eda canina. A continuaci\u00f3n, se describe la estructura de carpetas y archivos principales, con las funciones de cada aplicaci\u00f3n. Estructura de Archivos y Carpetas ```plaintext doggroomer/ \u251c\u2500\u2500 doggroomer/ # Aplicaci\u00f3n principal del proyecto \u2502 \u251c\u2500\u2500 init .py # Indica que esta es una carpeta de Python \u2502 \u251c\u2500\u2500 settings.py # Configuraci\u00f3n general (bases de datos, apps instaladas, etc.) \u2502 \u251c\u2500\u2500 urls.py # Rutas principales del proyecto \u2502 \u251c\u2500\u2500 asgi.py # Configuraci\u00f3n para despliegue as\u00edncrono \u2502 \u2514\u2500\u2500 wsgi.py # Configuraci\u00f3n para despliegue s\u00edncrono \u2502 \u251c\u2500\u2500 account/ # Gesti\u00f3n de usuarios y autenticaci\u00f3n \u2502 \u251c\u2500\u2500 migrations/ # Archivos de migraci\u00f3n de la base de datos para account \u2502 \u251c\u2500\u2500 templates/ # Plantillas HTML para autenticaci\u00f3n de usuarios \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 models.py # Modelos de usuario personalizados \u2502 \u251c\u2500\u2500 views.py # Vistas para el manejo de usuarios (registro, login, perfil) \u2502 \u2514\u2500\u2500 urls.py # Rutas espec\u00edficas para account \u2502 \u251c\u2500\u2500 acerca/ # P\u00e1gina home y contacto de la aplicaci\u00f3n \u2502 \u251c\u2500\u2500 templates/ # Plantillas HTML para home y contacto \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 views.py # Vistas para la p\u00e1gina de inicio y contacto \u2502 \u2514\u2500\u2500 urls.py # Rutas para home y contacto \u2502 \u251c\u2500\u2500 agenda_turnos/ # Manejo del calendario y turnos asignados \u2502 \u251c\u2500\u2500 migrations/ \u2502 \u251c\u2500\u2500 templates/ # Plantillas para ver y gestionar turnos \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 models.py # Modelos de turnos, incluyendo fechas, clientes y servicios \u2502 \u251c\u2500\u2500 views.py # L\u00f3gica para la gesti\u00f3n del calendario y asignaci\u00f3n de turnos \u2502 \u2514\u2500\u2500 urls.py # Rutas para calendario y administraci\u00f3n de turnos \u2502 \u251c\u2500\u2500 clientes/ # Registro de clientes y sus mascotas \u2502 \u251c\u2500\u2500 migrations/ \u2502 \u251c\u2500\u2500 templates/ # Plantillas para gestionar clientes y mascotas \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 models.py # Modelos de clientes y mascotas \u2502 \u251c\u2500\u2500 views.py # Vistas para administrar el registro de clientes y mascotas \u2502 \u2514\u2500\u2500 urls.py # Rutas para el registro y gesti\u00f3n de clientes y mascotas \u2502 \u251c\u2500\u2500 manage.py # Herramienta de l\u00ednea de comandos de Django \u251c\u2500\u2500 requirements.txt # Dependencias del proyecto \u2514\u2500\u2500 README.md # Documentaci\u00f3n inicial del proyecto","title":"Estructura"},{"location":"estructura/#estructura-del-proyecto-doggroomer","text":"Este proyecto de Django gestiona turnos, clientes y usuarios para una peluquer\u00eda canina. A continuaci\u00f3n, se describe la estructura de carpetas y archivos principales, con las funciones de cada aplicaci\u00f3n.","title":"Estructura del Proyecto Doggroomer"},{"location":"estructura/#estructura-de-archivos-y-carpetas","text":"```plaintext doggroomer/ \u251c\u2500\u2500 doggroomer/ # Aplicaci\u00f3n principal del proyecto \u2502 \u251c\u2500\u2500 init .py # Indica que esta es una carpeta de Python \u2502 \u251c\u2500\u2500 settings.py # Configuraci\u00f3n general (bases de datos, apps instaladas, etc.) \u2502 \u251c\u2500\u2500 urls.py # Rutas principales del proyecto \u2502 \u251c\u2500\u2500 asgi.py # Configuraci\u00f3n para despliegue as\u00edncrono \u2502 \u2514\u2500\u2500 wsgi.py # Configuraci\u00f3n para despliegue s\u00edncrono \u2502 \u251c\u2500\u2500 account/ # Gesti\u00f3n de usuarios y autenticaci\u00f3n \u2502 \u251c\u2500\u2500 migrations/ # Archivos de migraci\u00f3n de la base de datos para account \u2502 \u251c\u2500\u2500 templates/ # Plantillas HTML para autenticaci\u00f3n de usuarios \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 models.py # Modelos de usuario personalizados \u2502 \u251c\u2500\u2500 views.py # Vistas para el manejo de usuarios (registro, login, perfil) \u2502 \u2514\u2500\u2500 urls.py # Rutas espec\u00edficas para account \u2502 \u251c\u2500\u2500 acerca/ # P\u00e1gina home y contacto de la aplicaci\u00f3n \u2502 \u251c\u2500\u2500 templates/ # Plantillas HTML para home y contacto \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 views.py # Vistas para la p\u00e1gina de inicio y contacto \u2502 \u2514\u2500\u2500 urls.py # Rutas para home y contacto \u2502 \u251c\u2500\u2500 agenda_turnos/ # Manejo del calendario y turnos asignados \u2502 \u251c\u2500\u2500 migrations/ \u2502 \u251c\u2500\u2500 templates/ # Plantillas para ver y gestionar turnos \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 models.py # Modelos de turnos, incluyendo fechas, clientes y servicios \u2502 \u251c\u2500\u2500 views.py # L\u00f3gica para la gesti\u00f3n del calendario y asignaci\u00f3n de turnos \u2502 \u2514\u2500\u2500 urls.py # Rutas para calendario y administraci\u00f3n de turnos \u2502 \u251c\u2500\u2500 clientes/ # Registro de clientes y sus mascotas \u2502 \u251c\u2500\u2500 migrations/ \u2502 \u251c\u2500\u2500 templates/ # Plantillas para gestionar clientes y mascotas \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 models.py # Modelos de clientes y mascotas \u2502 \u251c\u2500\u2500 views.py # Vistas para administrar el registro de clientes y mascotas \u2502 \u2514\u2500\u2500 urls.py # Rutas para el registro y gesti\u00f3n de clientes y mascotas \u2502 \u251c\u2500\u2500 manage.py # Herramienta de l\u00ednea de comandos de Django \u251c\u2500\u2500 requirements.txt # Dependencias del proyecto \u2514\u2500\u2500 README.md # Documentaci\u00f3n inicial del proyecto","title":"Estructura de Archivos y Carpetas"},{"location":"instalacion/","text":"\ud83d\udccb Requisitos Python 3.8+ Django 3.2+ pip (Python package installer) \u2699\ufe0f Instalaci\u00f3n Sigue estos pasos para configurar el proyecto en tu m\u00e1quina local: Clona el repositorio: git clone git@github.com:agroquinvet/DogGroomer.py.git cd doggroomer Crea un entorno virtual: python -m venv env source env/bin/activate En Windows usa env\\Scripts\\activate Instala las dependencias: python manage.py makemigrations python manage.py migrate Crea un superusuario: python manage.py createsuperuser python manage.py runserver Accede a la aplicaci\u00f3n: Abre tu navegador y ve a http://127.0.0.1:8000 para acceder software.","title":"Instalaci\u00f3n"},{"location":"instalacion/#requisitos","text":"Python 3.8+ Django 3.2+ pip (Python package installer)","title":"\ud83d\udccb Requisitos"},{"location":"instalacion/#instalacion","text":"Sigue estos pasos para configurar el proyecto en tu m\u00e1quina local: Clona el repositorio: git clone git@github.com:agroquinvet/DogGroomer.py.git cd doggroomer Crea un entorno virtual: python -m venv env source env/bin/activate En Windows usa env\\Scripts\\activate Instala las dependencias: python manage.py makemigrations python manage.py migrate Crea un superusuario: python manage.py createsuperuser python manage.py runserver Accede a la aplicaci\u00f3n: Abre tu navegador y ve a http://127.0.0.1:8000 para acceder software.","title":"\u2699\ufe0f Instalaci\u00f3n"},{"location":"uso/","text":"\ud83d\ude80 Uso ingresa al software con el super usuario creado desde python registra un cliente por su numero de documento y luego una o varias mascotas para este cliente una vez agendados toma un turno para la mascota de acuerdo al servicicio que quieras ofrecer y luego peudes ir a la agenda y mirar el turno agendando en el dia y horario asignado.","title":"Uso"},{"location":"uso/#uso","text":"ingresa al software con el super usuario creado desde python registra un cliente por su numero de documento y luego una o varias mascotas para este cliente una vez agendados toma un turno para la mascota de acuerdo al servicicio que quieras ofrecer y luego peudes ir a la agenda y mirar el turno agendando en el dia y horario asignado.","title":"\ud83d\ude80 Uso"}]}